version: '3.5'

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/data/postgres/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  backendqa:
    container_name: backendqa_container
    image: backendqa

    build: ./BackMytiimQa
    restart: always
    ports:
      - "8181:8181"

    networks:
      - postgres

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mytiim-test
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin

  backend:
    container_name: backend_container
    image: backend

    build: ./BackMytiim
    restart: always
    ports:
      - "8080:8080"

    networks:
      - postgres

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mytiim
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin


  frontend:
    container_name: front_container
    image: frontend

    build: ./FrontMytiim
    restart: always
    ports:
      - "80:80"

    networks:
      - postgres

  frontendqa:
    container_name: frontqa_container
    image: frontendqa

    build: ./FrontMytiimQa
    restart: always
    ports:
      - "81:80"

    networks:
      - postgres

  web:
    container_name: web
    image: php:7.3-apache

    restart: always    

    ports:
      - "3000:80"
    volumes:
      - ./www:/var/www/html

    networks:
      - postgres


networks:
  postgres:
    driver: bridge

volumes:
    postgres:
    pgadmin:
    backend:
    frontend:
    backendqa:
    frontendqa:
    web:
